# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: Run tests and build fat jar
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: gradle

    - name: Cache Gradle packages
      uses: actions/cache@v2
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        restore-keys: ${{ runner.os }}-gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew build -x test

    - name: Upload app jar
      uses: actions/upload-artifact@v2
      with:
        name: app-jar
        path: build/libs/

  push_docker_image:
    name: Push Docker images to Docker Hub
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - uses: actions/checkout@v2
      - name: Download app jar
        uses: actions/download-artifact@v2
        with:
          name: app-jar
          path: build/libs

      - name: Display structure of downloaded files
        run: |
          ls -R
          echo $GITHUB_REF
          echo $GITHUB_WORKSPACE
          echo $GITHUB_REPOSITORY

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          driver: docker

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ github.repository }}:latest,${{ github.repository }}:${{ github.sha }}
